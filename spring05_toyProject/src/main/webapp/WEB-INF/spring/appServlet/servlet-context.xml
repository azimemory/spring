<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<task:annotation-driven/>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/file/**" location="file:///C:/CODE/afternoon/E_SERVLET/resources/upload/"  />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean id="simpleClientHttpRequestFactory"
			class="org.springframework.http.client.SimpleClientHttpRequestFactory">
		<beans:property name="connectTimeout" value="5000"/>
		<beans:property name="readTimeout" value="5000"/>
	</beans:bean>
	
	<beans:bean id="restTemplate"
			class="org.springframework.web.client.RestTemplate">
			<beans:constructor-arg name="requestFactory" ref="simpleClientHttpRequestFactory"/>
	</beans:bean>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<interceptors>
		<interceptor>
			<mapping path="/**"/>
			<beans:bean class="com.kh.toy.common.interceptor.AuthInterceptor"/>		
		</interceptor>
	</interceptors>
	
	<beans:bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:constructor-arg name="dataSource"  ref="dataSource"/>
	</beans:bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 트랜잭션 처리를 할 메서드 네임패턴 및 트랜잭션 정책 -->
			<tx:method name="select*" read-only="true"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 
		. 패키지 아래 모든 패키지 (1depth)
		.. 패키지 아래 모든 패키지
	 -->
	<aop:config>
		<aop:pointcut expression="execution(* com.kh.toy..*.*ServiceImpl.*(..))" id="txPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
	
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<context:component-scan base-package="com.kh.toy" />
	
</beans:beans>
